getwd()
setwd(d:/usuarios/genetica101/Desktop/coursera/R programming/week2)
setwd(d:\usuarios/genetica101/Desktop/coursera/R programming/week2)
?setwd()
setwd(d:\usuarios\genetica101\Desktop\coursera\R programming\week2)
setwd(d:/usuarios/genetica101/Desktop/coursera/R programming/week2)
setwd(d:/usuarios/genetica101/Desktop/coursera/R programming/week2)
setwd(d:usuarios/genetica101/Desktop/coursera/R programming/week2)
setwd(usuarios/genetica101/Desktop/coursera/R programming/week2)
set(d:)
setwd(d:/)
setwd(usuarios)
setwd(/usuarios)
q()
?inverse
?inverse()
str(rbinom)
set.seed(1)
rpois(5,2)
?rep
x<-rep(0:1, each=5)
x
e<-rnorm(10,0,20)
y<-0.5+2*x+e
plot(x,y)
library(datasets)
Rprof()
fit<-lm(y^x1+x2)
fit<-lm(y~x1+x2)
Rprof(NULL])
Rprof(NULL)
q()
library(nlme)
library(lattice)
xyplot(weight~Time|Diet, BodyWeight)
print.trellis()
trellis.par.set()
?trellis.par.set()
?par()
?slom()
?splom
?print.trellis
library(datasets)
data(airquality)
q()
setwd("d:/usuarios/genetica101/Desktop/coursera/Reproducicble_analysis")
activity <- read.csv("./activity/activity.csv", header=TRUE, na.strings="NA")
setwd("d:/usuarios/genetica101/Desktop/coursera/Reproducicble_analysis/RepData_PeerAssessment1")
activity <- read.csv("./activity/activity.csv", header=TRUE, na.strings="NA")
activity$date <- as.Date(activity$date)
head(activity)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
plot <- ggplot(activity, aes(interval, steps))
plot + geom_line(aes(color=date))+
labs(x="Interval", y="Average steps taken")
qplot(interval, steps, data=activity, color=date, geom="lines")
qplot(interval, steps, data=activity, color=date, geom="line")
averageinterval <- tapply(activity$steps, activity$interval, mean, na.rm=TRUE)
head(averageinterval)
int_split <- split(activity, interval)
int_split <- split(activity, activity$interval)
head(int_split)
average_int <- lapply(int_split, mean, na.rm=TRUE)
warnings()
?complete.cases()
int_split <- na.omit(int_split)
is.na(int_split)
average_int <- lapply(int_split, mean, na.rm=TRUE)
head(int_split)
int_split <- split(activity, activity$interval)
head(int_split)
int_split <- na.omit(int_split$steps)
int_split <- int_split[complete.cases(int_split),]
x <- complete.cases(int.split)
x <- complete.cases(int_split)
act_na.rm <- activity[complete.cases(activity),]
is.na(act_na.rm)
sum(is.na(act_na.rm))
int_split <- split(act_na.rm, act_na.rm$interval)
average_int <- lapply(int_split, mean)
head(int_split)
average_int <- lapply(int_split, mean, na.rm=TRUE)
warnings()
str(inst_split)
str(int_split)
str(act_na.rm)
act_na.rm$steps <- as.numeric(act_na.rm$steps)
str(act_na.rm)
activity <- read.csv("./activity/activity.csv", header=TRUE, na.strings="NA")
activity$date <- as.Date(activity$date)
act_na.rm <- activity[complete.cases(activity),]
head(act_na.rm)
sum(act_na.rm$steps)
mean(act_na.rm$steps)
act_na.rm$steps <- as.numeric(act_na.rm$steps)
sum(act_na.rm$steps)
mean(act_na.rm$steps)
int_split <- split(act_na.rm, act_na.rm$interval)
average_int <- lapply(int_split, mean, na.rm=TRUE)
install.packages("dplyr")
library(dplyr)
head(activity)
int <- group_by(activity, interval)
steps <- summarize(int, mean=mean(steps, na.rm=TRUE))
steps
qplot(interval, mean, data=steps, geom="line")
plot <- ggplot(steps, aes(interval, mean))
plot + geom_line()+
labs(x="Interval", y="Average steps taken")
max(steps$mean)
steps[max(steps$mean),1]
x <- max(steps$mean)
y <- match(x,steps$mean)
x
y
steps[104,]
steps[y,1]
steps[(match((max(steps$mean)),steps$mean),]
sum(is.na(activity))
?is.na
?aggregate
days <- group_by(activity,date)
sumdays <- summarize (days, mean = mean(steps, na.rm=TRUE))
head(sumdays)
sumdays <- summarize (days, median = median(steps, na.rm=TRUE))
head(sumdays)
sumdays <- summarize (days, median = median(steps, na.omit=TRUE))
head(days)
sumdays <- tapply(activity$steps, activity$date, sum, na.rm=TRUE)
hist(sumdays, xlab="Total number of steps per day")
sumdays <- tapply(activity$steps, activity$date, mean, na.rm=TRUE)
sumdays
aggregate(activity, date, mean)
aggregate(steps~date, activity, mean)
mean <- aggregate(steps~date, activity, mean, na.rm=TRUE)
mean
q()
